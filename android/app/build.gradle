apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "pw.bitset.remotely.remotely"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    def androidSupportLibraryVersion = "23.1.1"
    def retrofitVersion = "2.0.0-beta2"

    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'

    compile "com.android.support:appcompat-v7:${androidSupportLibraryVersion}"
    compile "com.android.support:design:${androidSupportLibraryVersion}"
    compile "com.squareup.retrofit:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit:converter-gson:${retrofitVersion}"
    compile "com.google.code.findbugs:annotations:3.0.0"
}

// Allow disabling pre dexing if the "-PdisablePreDex" gradle option is supplied, which speeds up
// gradle build times on build servers.
project.ext.preDexLibs = !project.hasProperty('disablePreDex')
subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}
